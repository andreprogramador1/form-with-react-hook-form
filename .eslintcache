[{"D:\\Projetos_andre\\Learning\\form\\src\\index.js":"1","D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\index.js":"2","D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\style.js":"3","D:\\Projetos_andre\\Learning\\form\\src\\App.js":"4","D:\\Projetos_andre\\Learning\\form\\src\\services\\api.js":"5","D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\index.js":"6","D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\style.js":"7","D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\index.js":"8","D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\style.js":"9","D:\\Projetos_andre\\Learning\\form\\src\\reportWebVitals.js":"10","D:\\Projetos_andre\\Learning\\form\\src\\routes\\index.js":"11"},{"size":500,"mtime":1606866031069,"results":"12","hashOfConfig":"13"},{"size":4523,"mtime":1609893910089,"results":"14","hashOfConfig":"13"},{"size":197,"mtime":1609720691771,"results":"15","hashOfConfig":"13"},{"size":556,"mtime":1609812552666,"results":"16","hashOfConfig":"13"},{"size":95,"mtime":1609724870466,"results":"17","hashOfConfig":"13"},{"size":1301,"mtime":1609893350694,"results":"18","hashOfConfig":"13"},{"size":325,"mtime":1609813765773,"results":"19","hashOfConfig":"13"},{"size":261,"mtime":1609816862181,"results":"20","hashOfConfig":"13"},{"size":346,"mtime":1609813439259,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":1606866031069,"results":"22","hashOfConfig":"13"},{"size":448,"mtime":1609891606171,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b4fb5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projetos_andre\\Learning\\form\\src\\index.js",[],["50","51"],"D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\index.js",["52","53"],"import React, { useEffect } from 'react'\nimport { Container } from './style'\nimport { useForm } from 'react-hook-form'\nimport { ErrorMessage } from '@hookform/error-message';\nimport api from '../../services/api'\nimport { SideBar } from '../SideBar'\nimport { useParams  } from 'react-router-dom'\n\nexport const Form = () => {\n\n  const { register, handleSubmit, watch, errors, setValue } = useForm({\n    criteriaMode: \"all\"\n  });\n\n  const { idparams } = useParams();\n\n  function clear(response) {\n    setValue('name', response ? response.data.name : '')\n    setValue('lastName', response ? response.data.lastName : '')\n    setValue('email', response ? response.data.email : '')\n    setValue('password', response ? response.data.password : '')\n    setValue('phone', response ? response.data.phone : '')\n  }\n\n  \n  useEffect(() => {\n    async function getProduct() {\n      const response = await api.get('users/'+idparams)\n      console.log(response)\n      clear(response)\n    }\n    getProduct()\n  },[idparams])\n\n\n  function onSubmit(data) {\n    \n    const method = idparams ? 'patch' : 'post'\n    const url = idparams\n     ? `/users/${idparams}`\n     : `/users/`\n    api[method](url, data)\n    .then((response) => {\n      clear()\n      // console.log(response)\n    })\n   \n  }\n\n\n  return (\n    <>\n    <Container>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n\n      <label>Name</label>\n      <input name=\"name\"\n\n        ref={register({\n          required: \"This is required.\",\n          maxLength: {\n            value: 10,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 3,\n            message: \"at least 3 characteres\"\n          }\n        })}\n      />\n\n      <ErrorMessage errors={errors} name=\"name\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n      <label>Last Name</label>\n      <input\n        name=\"lastName\"\n        ref={register({\n          required: \"This is required.\",\n          maxLength: {\n            value: 10,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 3,\n            message: \"at least 3 characteres\"\n          }\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"lastName\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n\n      <label>Email</label>\n      <input\n        name=\"email\"\n        ref={register({\n          required: \"This is required.\",\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"email\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n\n      <label>Password</label>\n      <input\n        name=\"password\"\n        ref={register({\n          required: \"This is required.\",\n          pattern: {\n            value: /^\\d+$/,\n            message: \"This input is number only.\"\n          },\n          maxLength: {\n            value: 12,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 5,\n            message: \"at least 5 characteres\"\n          }\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"password\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n\n      <label>Phone</label>\n      <input\n        name=\"phone\"\n        ref={register({\n          required: \"This is required.\",\n          pattern: {\n            value: /^\\d+$/,\n            message: \"This input is number only.\"\n          },\n          maxLength: {\n            value: 12,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 5,\n            message: \"at least 5 characteres\"\n          }\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"phone\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n      \n\n      <input type=\"submit\"/>\n    </form>\n\n        \n    </Container>\n    <SideBar/>\n    </>\n  );\n}","D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\style.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\App.js",["54","55","56","57","58"],"import React, { useState } from 'react'\nimport { Form } from './components/Form'\nimport { SideBar } from './components/SideBar';\nimport { List } from './components/List'\nimport api from './services/api'\nimport Routes from './routes'\nimport { BrowserRouter } from 'react-router-dom'\n\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\">\n       \n      {/* <Form data={data} setData={setData}/>\n      <List data={data} setData={setData}/> */}\n\n      <BrowserRouter>\n        <Routes/>\n      </BrowserRouter>\n       \n    </div>\n  );\n\n}\n\nexport default App;\n",["59","60"],"D:\\Projetos_andre\\Learning\\form\\src\\services\\api.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\index.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\style.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\index.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\style.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\reportWebVitals.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\routes\\index.js",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":11,"column":35,"nodeType":"69","messageId":"70","endLine":11,"endColumn":40},{"ruleId":"71","severity":1,"message":"72","line":33,"column":5,"nodeType":"73","endLine":33,"endColumn":15,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"76","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"77","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":17},{"ruleId":"67","severity":1,"message":"78","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"79","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":11},{"ruleId":"63","replacedBy":"80"},{"ruleId":"65","replacedBy":"81"},{"ruleId":"67","severity":1,"message":"82","line":6,"column":20,"nodeType":"69","messageId":"70","endLine":6,"endColumn":26},{"ruleId":"67","severity":1,"message":"83","line":9,"column":3,"nodeType":"69","messageId":"70","endLine":9,"endColumn":7},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'useState' is defined but never used.","'Form' is defined but never used.","'SideBar' is defined but never used.","'List' is defined but never used.","'api' is defined but never used.",["84"],["85"],"'Router' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [clear, idparams]",{"range":"89","text":"90"},[994,1004],"[clear, idparams]"]