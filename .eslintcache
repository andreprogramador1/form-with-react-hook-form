[{"D:\\Projetos_andre\\Learning\\form\\src\\index.js":"1","D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\index.js":"2","D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\style.js":"3","D:\\Projetos_andre\\Learning\\form\\src\\App.js":"4","D:\\Projetos_andre\\Learning\\form\\src\\services\\api.js":"5","D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\index.js":"6","D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\style.js":"7","D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\index.js":"8","D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\style.js":"9","D:\\Projetos_andre\\Learning\\form\\src\\reportWebVitals.js":"10","D:\\Projetos_andre\\Learning\\form\\src\\routes\\index.js":"11"},{"size":500,"mtime":1606866031069,"results":"12","hashOfConfig":"13"},{"size":3947,"mtime":1609817165326,"results":"14","hashOfConfig":"13"},{"size":197,"mtime":1609720691771,"results":"15","hashOfConfig":"13"},{"size":556,"mtime":1609812552666,"results":"16","hashOfConfig":"13"},{"size":95,"mtime":1609724870466,"results":"17","hashOfConfig":"13"},{"size":1106,"mtime":1609817729657,"results":"18","hashOfConfig":"13"},{"size":325,"mtime":1609813765773,"results":"19","hashOfConfig":"13"},{"size":261,"mtime":1609816862181,"results":"20","hashOfConfig":"13"},{"size":346,"mtime":1609813439259,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":1606866031069,"results":"22","hashOfConfig":"13"},{"size":424,"mtime":1609817364021,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b4fb5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projetos_andre\\Learning\\form\\src\\index.js",[],["48","49"],"D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\index.js",["50","51","52","53"],"import React, { useState, useEffect } from 'react'\nimport { Container } from './style'\nimport { useForm, Controller  } from 'react-hook-form'\nimport { ErrorMessage } from '@hookform/error-message';\nimport api from '../../services/api'\nimport { SideBar } from '../SideBar'\n\nexport const Form = () => {\n\n  const { register, handleSubmit, watch, errors } = useForm({\n    criteriaMode: \"all\"\n  });\n\n  \n\n  function onSubmit(data) {\n\n    try {\n      console.log(data)\n      const url = `/users`\n      api.post(url, data)\n      .then((response) => {\n      console.log(response)\n    })\n\n    } catch (error) {\n      console.log(error)\n    }\n    \n   \n  }\n\n  // const onSubmit = data => console.log(data);\n\n  return (\n    <>\n    <Container>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n\n      <label>Name</label>\n      <input name=\"name\"  \n        ref={register({\n          required: \"This is required.\",\n          maxLength: {\n            value: 10,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 3,\n            message: \"at least 3 characteres\"\n          }\n        })}\n      />\n\n      <ErrorMessage errors={errors} name=\"name\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n      <label>Last Name</label>\n      <input\n        name=\"lastName\"\n        ref={register({\n          required: \"This is required.\",\n          maxLength: {\n            value: 10,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 3,\n            message: \"at least 3 characteres\"\n          }\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"lastName\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n\n      <label>Email</label>\n      <input\n        name=\"email\"\n        ref={register({\n          required: \"This is required.\",\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"email\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n\n      <label>Password</label>\n      <input\n        name=\"password\"\n        ref={register({\n          required: \"This is required.\",\n          pattern: {\n            value: /^\\d+$/,\n            message: \"This input is number only.\"\n          },\n          maxLength: {\n            value: 12,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 5,\n            message: \"at least 5 characteres\"\n          }\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"password\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n\n\n      <label>Phone</label>\n      <input\n        name=\"phone\"\n        ref={register({\n          required: \"This is required.\",\n          pattern: {\n            value: /^\\d+$/,\n            message: \"This input is number only.\"\n          },\n          maxLength: {\n            value: 12,\n            message: \"This input exceed maxLength.\"\n          },\n          minLength: {\n            value: 5,\n            message: \"at least 5 characteres\"\n          }\n        })}\n      />\n      <ErrorMessage errors={errors} name=\"phone\">\n        {({ messages }) =>\n          messages &&\n          Object.entries(messages).map(([type, message]) => (\n            <p key={type}>{message}</p>\n          ))\n        }\n      </ErrorMessage>\n      \n\n      <input type=\"submit\"/>\n    </form>\n\n        \n    </Container>\n    <SideBar/>\n    </>\n  );\n}","D:\\Projetos_andre\\Learning\\form\\src\\components\\Form\\style.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\App.js",["54","55","56","57","58"],"D:\\Projetos_andre\\Learning\\form\\src\\services\\api.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\index.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\List\\style.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\index.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\components\\SideBar\\style.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\reportWebVitals.js",[],"D:\\Projetos_andre\\Learning\\form\\src\\routes\\index.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"70","line":3,"column":19,"nodeType":"67","messageId":"68","endLine":3,"endColumn":29},{"ruleId":"65","severity":1,"message":"71","line":10,"column":35,"nodeType":"67","messageId":"68","endLine":10,"endColumn":40},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"72","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"73","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":17},{"ruleId":"65","severity":1,"message":"74","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":14},{"ruleId":"65","severity":1,"message":"75","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":11},{"ruleId":"65","severity":1,"message":"76","line":6,"column":20,"nodeType":"67","messageId":"68","endLine":6,"endColumn":26},{"ruleId":"65","severity":1,"message":"77","line":9,"column":3,"nodeType":"67","messageId":"68","endLine":9,"endColumn":7},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Controller' is defined but never used.","'watch' is assigned a value but never used.","'Form' is defined but never used.","'SideBar' is defined but never used.","'List' is defined but never used.","'api' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]